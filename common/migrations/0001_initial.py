# Generated by Django 4.2.7 on 2025-04-24 17:52

import common.fields
import common.models.base
import common.models.model_declarations
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApiAuthentication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default='', max_length=255)),
                ('password', models.CharField(default='', max_length=255)),
                ('client_id', models.CharField(default='', max_length=255)),
                ('client_secret', models.CharField(default='', max_length=255)),
                ('server', models.CharField(default='', max_length=255)),
                ('session_key', models.CharField(default='dhis2_api_12904rs', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Constituency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='Name of the administrative unit e.g Nairobi', max_length=100)),
                ('code', common.fields.SequenceField(blank=True, help_text='A unique_code 4 digit number representing the region.', unique=True)),
            ],
            options={
                'verbose_name_plural': 'constituencies',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
            bases=(common.models.base.SequenceMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('contact', models.CharField(help_text='The actual contact of the person e.g test@mail.com, 07XXYYYZZZ', max_length=100)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='ContactType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='A short name, preferably 6 characters long, representing a certain type of contact e.g EMAIL', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='A brief description of the contact type.', null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='Name of the administrative unit e.g Nairobi', max_length=100)),
                ('code', common.fields.SequenceField(blank=True, help_text='A unique_code 4 digit number representing the region.', unique=True)),
            ],
            options={
                'verbose_name_plural': 'counties',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
            bases=(common.models.base.SequenceMixin, models.Model),
        ),
        migrations.CreateModel(
            name='DocumentUpload',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('fyl', models.FileField(blank=True, null=True, upload_to='')),
                ('document_type', models.CharField(default='NORMAL', max_length=255)),
                ('facility_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='ErrorQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_pk', models.CharField(blank=True, max_length=100, null=True)),
                ('app_label', models.CharField(blank=True, max_length=100, null=True)),
                ('model_name', models.CharField(blank=True, max_length=100, null=True)),
                ('resolved', models.BooleanField(default=False)),
                ('retries', models.IntegerField(default=0)),
                ('except_message', models.TextField(blank=True, null=True)),
                ('error_type', models.CharField(choices=[('SEARCH_INDEXING_ERROR', 'An error that occurred during search indexing'), ('SEND_EMAIL_ERROR', 'An error that occurs when sending a user email')], max_length=100)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='NoficiationGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PhysicalAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('nearest_landmark', models.TextField(blank=True, help_text='well-known physical features /structure that can be used to simplify directions to a given place. e.g town market or village ', null=True)),
                ('plot_number', models.CharField(blank=True, help_text='This is the same number found on the title deeds of thepiece of land on which this facility is located', max_length=100, null=True)),
                ('location_desc', models.TextField(blank=True, help_text='This field allows a more detailed description of the location', null=True)),
            ],
            options={
                'verbose_name_plural': 'physical addresses',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='SubCounty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='Name of the administrative unit e.g Nairobi', max_length=100)),
                ('code', common.fields.SequenceField(blank=True, help_text='A unique_code 4 digit number representing the region.', unique=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
            bases=(common.models.base.SequenceMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(blank=True, help_text='Name of the town', max_length=255, null=True, unique=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='UserConstituency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'user constituencies',
            },
            bases=(common.models.model_declarations.UserAdminAreaLinkageMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UserContact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='UserCounty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'user_counties',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
            bases=(common.models.model_declarations.UserAdminAreaLinkageMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UserSubCounty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='Name of the administrative unit e.g Nairobi', max_length=100)),
                ('code', common.fields.SequenceField(blank=True, help_text='A unique_code 4 digit number representing the region.', unique=True)),
                ('constituency', models.ForeignKey(help_text='The constituency where the ward is located.', on_delete=django.db.models.deletion.PROTECT, to='common.constituency')),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
            bases=(common.models.base.SequenceMixin, models.Model),
        ),
    ]
