# Generated by Django 4.2.7 on 2025-04-24 17:52

import common.models.base
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('facilities', '0001_initial'),
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='specialitycategory',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='specialitycategory',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='The parent category under which the category falls', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sub_categories', to='facilities.specialitycategory'),
        ),
        migrations.AddField(
            model_name='specialitycategory',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='speciality',
            name='category',
            field=models.ForeignKey(help_text='The classification that the specialities lies in.', on_delete=django.db.models.deletion.PROTECT, related_name='category_specialities', to='facilities.specialitycategory'),
        ),
        migrations.AddField(
            model_name='speciality',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='speciality',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='servicecategory',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='servicecategory',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='The parent category under which the category falls', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sub_categories', to='facilities.servicecategory'),
        ),
        migrations.AddField(
            model_name='servicecategory',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='service',
            name='category',
            field=models.ForeignKey(help_text='The classification that the service lies in.', on_delete=django.db.models.deletion.PROTECT, related_name='category_services', to='facilities.servicecategory'),
        ),
        migrations.AddField(
            model_name='service',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='service',
            name='group',
            field=models.ForeignKey(help_text='The option group containing service options', on_delete=django.db.models.deletion.PROTECT, to='facilities.optiongroup'),
        ),
        migrations.AddField(
            model_name='service',
            name='keph_level',
            field=models.ForeignKey(blank=True, help_text='The KEPH level at which the service ought to be offered', null=True, on_delete=django.db.models.deletion.PROTECT, to='facilities.kephlevel'),
        ),
        migrations.AddField(
            model_name='service',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatorybodyuser',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatorybodyuser',
            name='regulatory_body',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facilities.regulatingbody'),
        ),
        migrations.AddField(
            model_name='regulatorybodyuser',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatorybodyuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='regulatory_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatorsync',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatorsync',
            name='facility_type',
            field=models.ForeignKey(help_text='The type of the facility e.g Medical Clinic', on_delete=django.db.models.deletion.PROTECT, to='facilities.facilitytype'),
        ),
        migrations.AddField(
            model_name='regulatorsync',
            name='owner',
            field=models.ForeignKey(help_text='The owner of the facility', on_delete=django.db.models.deletion.PROTECT, to='facilities.owner'),
        ),
        migrations.AddField(
            model_name='regulatorsync',
            name='regulatory_body',
            field=models.ForeignKey(help_text='The regulatory body the record came from', on_delete=django.db.models.deletion.PROTECT, to='facilities.regulatingbody'),
        ),
        migrations.AddField(
            model_name='regulatorsync',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulationstatus',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulationstatus',
            name='next_status',
            field=models.ForeignKey(blank=True, help_text='The regulation_status succeeding this regulation status.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_state', to='facilities.regulationstatus'),
        ),
        migrations.AddField(
            model_name='regulationstatus',
            name='previous_status',
            field=models.ForeignKey(blank=True, help_text='The regulation_status preceding this regulation status.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='previous_state', to='facilities.regulationstatus'),
        ),
        migrations.AddField(
            model_name='regulationstatus',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatingbodycontact',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.contact'),
        ),
        migrations.AddField(
            model_name='regulatingbodycontact',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatingbodycontact',
            name='regulating_body',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reg_contacts', to='facilities.regulatingbody'),
        ),
        migrations.AddField(
            model_name='regulatingbodycontact',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatingbody',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='regulatingbody',
            name='default_status',
            field=models.ForeignKey(blank=True, help_text='The default status for the facilities regulated by the particular regulator', null=True, on_delete=django.db.models.deletion.CASCADE, to='facilities.regulationstatus'),
        ),
        migrations.AddField(
            model_name='regulatingbody',
            name='regulatory_body_type',
            field=models.ForeignKey(blank=True, help_text='Show the kind of institutions that the body regulates e.gprivate facilities', null=True, on_delete=django.db.models.deletion.CASCADE, to='facilities.ownertype'),
        ),
        migrations.AddField(
            model_name='regulatingbody',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ownertype',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ownertype',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='owner',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='owner',
            name='owner_type',
            field=models.ForeignKey(help_text='The classification of the owner e.g INDIVIDUAL', on_delete=django.db.models.deletion.PROTECT, to='facilities.ownertype'),
        ),
        migrations.AddField(
            model_name='owner',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='optiongroup',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='optiongroup',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='option',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='option',
            name='group',
            field=models.ForeignKey(help_text='The option group where the option lies', on_delete=django.db.models.deletion.PROTECT, related_name='options', to='facilities.optiongroup'),
        ),
        migrations.AddField(
            model_name='option',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='officercontact',
            name='contact',
            field=models.ForeignKey(help_text='The contact of the officer in-charge may it be email,  mobile number etc', on_delete=django.db.models.deletion.PROTECT, to='common.contact'),
        ),
        migrations.AddField(
            model_name='officercontact',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='officercontact',
            name='officer',
            field=models.ForeignKey(help_text='The is the officer in charge', on_delete=django.db.models.deletion.PROTECT, related_name='officer_contacts', to='facilities.officer'),
        ),
        migrations.AddField(
            model_name='officercontact',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='officer',
            name='contacts',
            field=models.ManyToManyField(help_text='Personal contacts of the officer in charge', through='facilities.OfficerContact', to='common.contact'),
        ),
        migrations.AddField(
            model_name='officer',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='officer',
            name='job_title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.jobtitle'),
        ),
        migrations.AddField(
            model_name='officer',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='kephlevel',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='kephlevel',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='infrastructurecategory',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='infrastructurecategory',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='The parent category under which the category falls', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sub_categories', to='facilities.infrastructurecategory'),
        ),
        migrations.AddField(
            model_name='infrastructurecategory',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='infrastructure',
            name='category',
            field=models.ForeignKey(help_text='The classification that the infrastructure item lies in.', on_delete=django.db.models.deletion.PROTECT, related_name='category_infrastructure', to='facilities.infrastructurecategory'),
        ),
        migrations.AddField(
            model_name='infrastructure',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='infrastructure',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityupgrade',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityupgrade',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='facility_upgrades', to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='facilityupgrade',
            name='facility_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facilities.facilitytype'),
        ),
        migrations.AddField(
            model_name='facilityupgrade',
            name='keph_level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='facilities.kephlevel'),
        ),
        migrations.AddField(
            model_name='facilityupgrade',
            name='reason',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facilities.facilitylevelchangereason'),
        ),
        migrations.AddField(
            model_name='facilityupgrade',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityupdates',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityupdates',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='facilityupdates',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityunitregulation',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityunitregulation',
            name='facility_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='regulations', to='facilities.facilityunit'),
        ),
        migrations.AddField(
            model_name='facilityunitregulation',
            name='regulation_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facility_units', to='facilities.regulationstatus'),
        ),
        migrations.AddField(
            model_name='facilityunitregulation',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityunit',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityunit',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='facility_units', to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='facilityunit',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='unit_facilities', to='facilities.facilitydepartment'),
        ),
        migrations.AddField(
            model_name='facilityunit',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilitytype',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilitytype',
            name='owner_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='facilities.ownertype'),
        ),
        migrations.AddField(
            model_name='facilitytype',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='facilities.facilitytype'),
        ),
        migrations.AddField(
            model_name='facilitytype',
            name='preceding',
            field=models.ForeignKey(blank=True, help_text='The facility type that comes before this type', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='preceding_type', to='facilities.facilitytype'),
        ),
        migrations.AddField(
            model_name='facilitytype',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilitystatus',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilitystatus',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityspecialist',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityspecialist',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='facility_specialists', to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='facilityspecialist',
            name='speciality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='speciality', to='facilities.speciality'),
        ),
        migrations.AddField(
            model_name='facilityspecialist',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityservicerating',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityservicerating',
            name='facility_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='facility_service_ratings', to='facilities.facilityservice'),
        ),
        migrations.AddField(
            model_name='facilityservicerating',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityservice',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityservice',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='facility_services', to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='facilityservice',
            name='option',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='facilities.option'),
        ),
        migrations.AddField(
            model_name='facilityservice',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_id', to='facilities.service'),
        ),
        migrations.AddField(
            model_name='facilityservice',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityregulationstatus',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityregulationstatus',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='regulatory_details', to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='facilityregulationstatus',
            name='regulating_body',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='facilities.regulatingbody'),
        ),
        migrations.AddField(
            model_name='facilityregulationstatus',
            name='regulation_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facilities.regulationstatus'),
        ),
        migrations.AddField(
            model_name='facilityregulationstatus',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityoperationstate',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityoperationstate',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='facility_operation_states', to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='facilityoperationstate',
            name='operation_status',
            field=models.ForeignKey(help_text='Indicates whether the facilityhas been approved to operate, is operating, is temporarilynon-operational, or is closed down', on_delete=django.db.models.deletion.PROTECT, to='facilities.facilitystatus'),
        ),
        migrations.AddField(
            model_name='facilityoperationstate',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityofficer',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityofficer',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='facility_officers', to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='facilityofficer',
            name='officer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='officer_facilities', to='facilities.officer'),
        ),
        migrations.AddField(
            model_name='facilityofficer',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilitylevelchangereason',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilitylevelchangereason',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityinfrastructure',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityinfrastructure',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='facility_infrastructure', to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='facilityinfrastructure',
            name='infrastructure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='infrastructure', to='facilities.infrastructure'),
        ),
        migrations.AddField(
            model_name='facilityinfrastructure',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilitydepartment',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilitydepartment',
            name='regulatory_body',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facilities.regulatingbody'),
        ),
        migrations.AddField(
            model_name='facilitydepartment',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilitycontact',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='common.contact'),
        ),
        migrations.AddField(
            model_name='facilitycontact',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilitycontact',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='facility_contacts', to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='facilitycontact',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityapproval',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityapproval',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='facilityapproval',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityadmissionstatus',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facilityadmissionstatus',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facility',
            name='admission_status',
            field=models.ForeignKey(blank=True, help_text='Indicates whether the facilityhas been approved to admit and the admission categories it caters for', null=True, on_delete=django.db.models.deletion.PROTECT, to='facilities.facilityadmissionstatus'),
        ),
        migrations.AddField(
            model_name='facility',
            name='contacts',
            field=models.ManyToManyField(help_text='Facility contacts - email, phone, fax, postal etc', through='facilities.FacilityContact', to='common.contact'),
        ),
        migrations.AddField(
            model_name='facility',
            name='county',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.county'),
        ),
        migrations.AddField(
            model_name='facility',
            name='created_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facility',
            name='facility_type',
            field=models.ForeignKey(help_text='This depends on who owns the facility. For MOH facilities,type is the gazetted classification of the facility.For Non-MOH check under the respective owners.', on_delete=django.db.models.deletion.PROTECT, to='facilities.facilitytype'),
        ),
        migrations.AddField(
            model_name='facility',
            name='keph_level',
            field=models.ForeignKey(blank=True, help_text='The keph level of the facility', null=True, on_delete=django.db.models.deletion.PROTECT, to='facilities.kephlevel'),
        ),
        migrations.AddField(
            model_name='facility',
            name='operation_status',
            field=models.ForeignKey(blank=True, help_text='Indicates whether the facilityhas been approved to operate, is operating, is temporarilynon-operational, or is closed down', null=True, on_delete=django.db.models.deletion.PROTECT, to='facilities.facilitystatus'),
        ),
        migrations.AddField(
            model_name='facility',
            name='owner',
            field=models.ForeignKey(help_text='A link to the organization that owns the facility', on_delete=django.db.models.deletion.PROTECT, to='facilities.owner'),
        ),
        migrations.AddField(
            model_name='facility',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Indicates the umbrella facility of a facility', null=True, on_delete=django.db.models.deletion.CASCADE, to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='facility',
            name='regulation_status',
            field=models.ForeignKey(blank=True, help_text='The regulatory status of the hospital', null=True, on_delete=django.db.models.deletion.PROTECT, to='facilities.regulationstatus'),
        ),
        migrations.AddField(
            model_name='facility',
            name='regulatory_body',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='facilities.regulatingbody'),
        ),
        migrations.AddField(
            model_name='facility',
            name='sub_county',
            field=models.ForeignKey(blank=True, help_text='The sub county in which the facility has been assigned', null=True, on_delete=django.db.models.deletion.PROTECT, to='common.subcounty'),
        ),
        migrations.AddField(
            model_name='facility',
            name='town',
            field=models.ForeignKey(blank=True, help_text='The town where the entity is located e.g Nakuru', null=True, on_delete=django.db.models.deletion.PROTECT, to='common.town'),
        ),
        migrations.AddField(
            model_name='facility',
            name='updated_by',
            field=models.ForeignKey(default=common.models.base.get_default_system_user_id, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facility',
            name='ward',
            field=models.ForeignKey(blank=True, help_text='County ward in which the facility is located', null=True, on_delete=django.db.models.deletion.PROTECT, to='common.ward'),
        ),
        migrations.AlterUniqueTogether(
            name='facilityunit',
            unique_together={('facility', 'unit')},
        ),
        migrations.AlterUniqueTogether(
            name='facilitytype',
            unique_together={('name',)},
        ),
        migrations.AlterUniqueTogether(
            name='facilityofficer',
            unique_together={('facility', 'officer')},
        ),
        migrations.AlterUniqueTogether(
            name='facilitycontact',
            unique_together={('facility', 'contact')},
        ),
    ]
