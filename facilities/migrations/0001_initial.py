# Generated by Django 4.2.7 on 2025-04-24 17:52

import common.fields
import common.models.base
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FacilityExportExcelMaterialView',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Unique name of the facility', max_length=100)),
                ('officialname', models.CharField(help_text='Official name of the facility', max_length=100)),
                ('code', models.IntegerField(help_text='The facility code')),
                ('registration_number', models.CharField(help_text='The facilities registration_number', max_length=100)),
                ('keph_level_name', models.UUIDField(blank=True, help_text="The facility's keph-level", null=True)),
                ('facility_type_name', models.CharField(help_text='The facility type', max_length=100)),
                ('facility_type_category', models.CharField(help_text='The facility category name', max_length=100)),
                ('facility_type_parent', models.UUIDField(blank=True, help_text="The name of the facility's type parent uid", null=True)),
                ('county', models.UUIDField(blank=True, help_text="Name of the facility's county", null=True)),
                ('constituency', models.UUIDField(blank=True, help_text="The name of the facility's constituency ", null=True)),
                ('ward', models.UUIDField(help_text="Name of the facility's ward")),
                ('owner_name', models.CharField(help_text="The facility's owner", max_length=100)),
                ('owner_type_name', models.CharField(help_text="The facility's owner type name", max_length=100)),
                ('regulatory_body_name', models.CharField(help_text="The name of the facility's regulator", max_length=100)),
                ('beds', models.IntegerField(help_text='The number of beds in the facility')),
                ('cots', models.IntegerField(help_text='The number of cots in the facility')),
                ('search', models.CharField(blank=True, help_text='A dummy search field', max_length=255, null=True)),
                ('county_name', models.CharField(blank=True, max_length=100, null=True)),
                ('constituency_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sub_county', models.CharField(blank=True, max_length=100, null=True)),
                ('sub_county_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ward_name', models.CharField(blank=True, max_length=100, null=True)),
                ('keph_level', models.CharField(blank=True, max_length=100, null=True)),
                ('facility_type', models.CharField(blank=True, max_length=100, null=True)),
                ('owner_type', models.CharField(blank=True, max_length=100, null=True)),
                ('owner', models.UUIDField(blank=True, null=True)),
                ('operation_status', models.UUIDField(blank=True, null=True)),
                ('operation_status_name', models.CharField(blank=True, max_length=100, null=True)),
                ('admission_status_name', models.CharField(blank=True, max_length=100, null=True)),
                ('open_whole_day', models.BooleanField(default=False, help_text='Does the facility operate 24 hours a day')),
                ('open_public_holidays', models.BooleanField(default=False, help_text='Is the facility open on public holidays?')),
                ('open_weekends', models.BooleanField(default=False, help_text='Is the facility_open during weekends?')),
                ('open_late_night', models.BooleanField(default=False, help_text='Indicates if a facility is open late night e.g up-to 11 pm')),
                ('services', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(blank=True, null=True), blank=True, null=True, size=None)),
                ('categories', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(blank=True, null=True), blank=True, null=True, size=None)),
                ('service_names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=1000, null=True), blank=True, null=True, size=None)),
                ('infrastructure', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(blank=True, null=True), blank=True, null=True, size=None)),
                ('infrastructure_names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=1000, null=True), blank=True, null=True, size=None)),
                ('infrastructure_categories', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(blank=True, null=True), blank=True, null=True, size=None)),
                ('speciality', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(blank=True, null=True), blank=True, null=True, size=None)),
                ('speciality_names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=1000, null=True), blank=True, null=True, size=None)),
                ('speciality_categories', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(blank=True, null=True), blank=True, null=True, size=None)),
                ('approved', models.BooleanField(default=False)),
                ('is_public_visible', models.BooleanField(default=False)),
                ('created', models.DateTimeField()),
                ('updated', models.DateTimeField()),
                ('closed', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False)),
                ('long', models.CharField(blank=True, max_length=30, null=True)),
                ('lat', models.CharField(blank=True, max_length=30, null=True)),
                ('approved_national_level', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'facilities_excel_export',
                'ordering': ('-created',),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DhisAuth',
            fields=[
                ('apiauthentication_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='common.apiauthentication')),
                ('oauth2_token_variable_name', models.CharField(default='api_oauth2_token', max_length=255)),
                ('type', models.CharField(default='DHIS2', max_length=255)),
            ],
            bases=('common.apiauthentication',),
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='This is the unique name of the facility', max_length=100, unique=True)),
                ('official_name', models.CharField(blank=True, help_text='The official name of the facility', max_length=150, null=True)),
                ('code', common.fields.SequenceField(blank=True, editable=False, help_text='A sequential number allocated to each facility', null=True, unique=True)),
                ('registration_number', models.CharField(blank=True, help_text='The registration number given by the regulator', max_length=100, null=True)),
                ('abbreviation', models.CharField(blank=True, help_text='A short name for the facility.', max_length=30, null=True)),
                ('description', models.TextField(blank=True, help_text='A brief summary of the Facility', null=True)),
                ('number_of_beds', models.PositiveIntegerField(default=0, help_text='The number of authorized inpatient beds that a facility has. e.g 0')),
                ('number_of_cots', models.PositiveIntegerField(default=0, help_text='The number of authorized cots that a facility has e.g 0')),
                ('number_of_emergency_casualty_beds', models.PositiveIntegerField(default=0, help_text='The number of emergency casualty beds  that a facility has e.g 0')),
                ('number_of_icu_beds', models.PositiveIntegerField(default=0, help_text='The number of Intensive Care Units (ICU) beds that a facility has e.g 0')),
                ('number_of_hdu_beds', models.PositiveIntegerField(default=0, help_text='The number of High Dependency Units (HDU) beds that a facility has e.g 0')),
                ('number_of_inpatient_beds', models.PositiveIntegerField(default=0, help_text='The number of General In-patient beds that a facility has e.g 0')),
                ('number_of_maternity_beds', models.PositiveIntegerField(default=0, help_text='The number of maternity beds that a facility has e.g 0')),
                ('number_of_isolation_beds', models.PositiveIntegerField(default=0, help_text='The number of isolation beds that a facility has e.g 0')),
                ('number_of_general_theatres', models.PositiveIntegerField(default=0, help_text='The number of general theatres  that a facility has e.g 0')),
                ('number_of_maternity_theatres', models.PositiveIntegerField(default=0, help_text='The number of maternity theatres  that a facility has e.g 0')),
                ('number_of_minor_theatres', models.PositiveIntegerField(default=0, help_text='The number of minor theatres  that a facility has e.g 0')),
                ('number_of_eye_theatres', models.PositiveIntegerField(default=0, help_text='The number of eye theatres  that a facility has e.g 0')),
                ('new_born_unit', models.BooleanField(default=False)),
                ('out_reach_services', models.BooleanField(default=False)),
                ('open_whole_day', models.BooleanField(default=False, help_text='Does the facility operate 24 hours a day')),
                ('open_public_holidays', models.BooleanField(default=False, help_text='Is the facility open on public holidays?')),
                ('open_normal_day', models.BooleanField(default=True, help_text='Is the facility open from 8 am to 5 pm')),
                ('open_weekends', models.BooleanField(default=False, help_text='Is the facility_open during weekends?')),
                ('open_late_night', models.BooleanField(default=False, help_text='Indicates if a facility is open late night e.g upto 11 pm')),
                ('is_classified', models.BooleanField(default=False, help_text="Should the facility geo-codes be visible to the public?Certain facilities are kept 'off-the-map'")),
                ('is_published', models.BooleanField(default=False, help_text='COnfirmation by the CHRIO that the facility is okay')),
                ('accredited_lab_iso_15189', models.BooleanField(default=False, help_text='Indicate if facility is accredited Lab ISO 15189')),
                ('attributes', models.TextField(blank=True, null=True)),
                ('regulated', models.BooleanField(default=False)),
                ('approved', models.BooleanField(blank=True, help_text='Has the facility been approved at the county level', null=True)),
                ('rejected', models.BooleanField(default=False)),
                ('has_edits', models.BooleanField(default=False)),
                ('bank_name', models.CharField(blank=True, help_text="The name of the facility's banker e.g Equity Bank", max_length=100, null=True)),
                ('branch_name', models.CharField(blank=True, help_text="Branch name of the facility's bank", max_length=100, null=True)),
                ('bank_account', models.CharField(blank=True, max_length=100, null=True)),
                ('facility_catchment_population', models.IntegerField(blank=True, help_text='The population size which the facility serves', null=True)),
                ('town_name', models.CharField(blank=True, help_text='The town where the entity is located e.g Nakuru', max_length=100, null=True)),
                ('nearest_landmark', models.TextField(blank=True, help_text='well-known physical features /structure that can be used to simplify directions to a given place. e.g town market or village ', null=True)),
                ('plot_number', models.CharField(blank=True, help_text='This is the same number found on the title deeds of thepiece of land on which this facility is located', max_length=100, null=True)),
                ('location_desc', models.TextField(blank=True, help_text='This field allows a more detailed description of the location', null=True)),
                ('closed', models.BooleanField(default=False, help_text='Indicates whether a facility has been closed by the regulator')),
                ('closed_date', models.DateTimeField(blank=True, help_text='Date the facility was closed', null=True)),
                ('approvalrejection_date', models.DateTimeField(blank=True, help_text='Date the facility was approved or rejected', null=True)),
                ('closing_reason', models.TextField(blank=True, help_text='Reason for closing the facility', null=True)),
                ('date_established', models.DateField(blank=True, help_text='The date when the facility became operational', null=True)),
                ('license_number', models.CharField(blank=True, help_text='The license number given to the hospital by the regulator', max_length=100, null=True)),
                ('admitting_maternity_only', models.BooleanField(blank=True, help_text='A flag to indicate whether facility admits only maternity patients', null=True)),
                ('admitting_maternity_general', models.BooleanField(blank=True, help_text='A flag to indicate whether facility admits both maternity & general casualty patients', null=True)),
                ('reporting_in_dhis', models.BooleanField(blank=True, help_text='A flag to indicate whether facility should have reporting in dhis', null=True)),
                ('nhif_accreditation', models.BooleanField(blank=True, default=False, help_text='A flag to indicate whether facility is accredited by nhif', null=True)),
                ('approved_national_level', models.BooleanField(blank=True, help_text='Has the facility been approved at the national level', null=True)),
            ],
            options={
                'verbose_name_plural': 'facilities',
                'ordering': ('-updated', '-created'),
                'permissions': (('view_classified_facilities', 'Can see classified facilities'), ('view_closed_facilities', 'Can see closed facilities'), ('view_rejected_facilities', 'Can see rejected facilities'), ('publish_facilities', 'Can publish facilities'), ('view_unpublished_facilities', 'Can see the un published facilities'), ('view_unapproved_facilities', 'Can see the unapproved facilities'), ('view_all_facility_fields', 'Can see the all information on a facilities')),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
            bases=(common.models.base.SequenceMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FacilityAdmissionStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='A short name representing the admission status e.g NOT ADMITTING', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='A short explanation of what the admission status entails.', null=True)),
            ],
            options={
                'verbose_name_plural': 'facility admission statuses',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityApproval',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_cancelled', models.BooleanField(default=False, help_text='Cancel a facility approval')),
                ('is_national_approval', models.BooleanField(default=False, help_text='Approval of the facility at the national level')),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityContact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityDepartment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityInfrastructure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('count', models.IntegerField(blank=True, default=0, help_text='The actual number of infrastructure items in a facility.')),
                ('present', models.BooleanField(default=False, help_text='True if the listed infrastructure is present.')),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityLevelChangeReason',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('reason', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityOfficer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityOperationState',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('reason', models.TextField(blank=True, help_text='Additional information for the transition', null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityRegulationStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('reason', models.TextField(blank=True, help_text='An explanation for as to why is the facility is beingput in the particular status', null=True)),
                ('license_number', models.CharField(blank=True, help_text='The license number that the facility has been given by the regulator', max_length=100, null=True)),
                ('license_is_expired', models.BooleanField(default=False, help_text='A flag to indicate whether the license is valid or not')),
            ],
            options={
                'verbose_name_plural': 'facility regulation statuses',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('is_confirmed', models.BooleanField(default=False, help_text='Indicates whether a service has been approved by the CHRIO')),
                ('is_cancelled', models.BooleanField(default=False, help_text='Indicates whether a service has been canceled by the CHRIO')),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityServiceRating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilitySpecialist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('count', models.IntegerField(blank=True, default=0, help_text='The actual number of specialists for this speciality.')),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='A short name representing the operation status e.g OPERATIONAL', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='A short explanation of what the status entails.', null=True)),
                ('is_public_visible', models.BooleanField(default=False, help_text='The facilities with this status should be visible to the public')),
            ],
            options={
                'verbose_name_plural': 'facility statuses',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='A short unique name for the facility type e.g DISPENSARY', max_length=100, unique=True)),
                ('abbreviation', models.CharField(blank=True, max_length=100, null=True)),
                ('sub_division', models.CharField(blank=True, help_text='Parent of the facility type e.g sub-district hospitals are under Hospitals.', max_length=100, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityUnit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('license_number', models.CharField(blank=True, max_length=100, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityUnitRegulation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityUpdates',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('cancelled', models.BooleanField(default=False)),
                ('facility_updates', models.TextField(blank=True, null=True)),
                ('contacts', models.TextField(blank=True, null=True)),
                ('services', models.TextField(blank=True, null=True)),
                ('humanresources', models.TextField(blank=True, null=True)),
                ('infrastructure', models.TextField(blank=True, null=True)),
                ('officer_in_charge', models.TextField(blank=True, null=True)),
                ('units', models.TextField(blank=True, null=True)),
                ('geo_codes', models.TextField(blank=True, null=True)),
                ('is_new', models.BooleanField(default=False)),
                ('is_national_approval', models.BooleanField(default=False, help_text='Approval of the facility at the national level')),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='FacilityUpgrade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('is_confirmed', models.BooleanField(default=False, help_text='Indicates whether a facility upgrade or downgrade has been confirmed')),
                ('is_cancelled', models.BooleanField(default=False, help_text='Indicates whether a facility upgrade or downgrade has beencanceled or not')),
                ('is_upgrade', models.BooleanField(default=True)),
                ('current_keph_level_name', models.CharField(blank=True, max_length=100, null=True)),
                ('current_facility_type_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Infrastructure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('abbreviation', models.CharField(blank=True, help_text='A short form for the infrastructure', max_length=50, null=True)),
                ('numbers', models.BooleanField(blank=True, default=True, help_text='A flag to indicate whether an infrastructure item can have count/numbers tracked ', null=True)),
                ('code', common.fields.SequenceField(blank=True, editable=False, unique=True)),
            ],
            options={
                'verbose_name_plural': 'infrastructure',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
            bases=(common.models.base.SequenceMixin, models.Model),
        ),
        migrations.CreateModel(
            name='InfrastructureCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='What is the name of the category? ', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('abbreviation', models.CharField(blank=True, help_text='A short form of the category e.g ANC for antenatal', max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'specialities categories',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='KephLevel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='The name of the KEPH e.g Level 1', max_length=30)),
                ('description', models.TextField(blank=True, help_text='A short description of the KEPH level', null=True)),
                ('is_facility_level', models.BooleanField(default=True, help_text='Is the KEPH level applicable to facilities')),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Officer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='the name of the officer in-charge e.g Roselyne Wiyanga ', max_length=255)),
                ('id_number', models.CharField(blank=True, help_text='The  National Identity number of the officer', max_length=10, null=True)),
                ('registration_number', models.CharField(blank=True, help_text='This is the license number of the officer. e.g for a nurse use the NCK registration number.', max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'officers in charge',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='OfficerContact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('value', models.TextField()),
                ('display_text', models.CharField(max_length=30)),
                ('is_exclusive_option', models.BooleanField(default=True)),
                ('option_type', models.CharField(choices=[('BOOLEAN', 'Yes/No or True/False responses'), ('INTEGER', 'Integral numbers e.g 1,2,3'), ('DECIMAL', 'Decimal numbers, may have a fraction e.g 3.14'), ('TEXT', 'Plain text')], max_length=12)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='OptionGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='The name of owner e.g Ministry of Health.', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='A brief summary of the owner.', null=True)),
                ('code', common.fields.SequenceField(blank=True, editable=False, help_text='A unique number to identify the owner.Could be up to 7 characters long.', unique=True)),
                ('abbreviation', models.CharField(blank=True, help_text='Short form of the name of the owner e.g Ministry of health could be shortened as MOH', max_length=30, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
            bases=(models.Model, common.models.base.SequenceMixin),
        ),
        migrations.CreateModel(
            name='OwnerType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='Short unique name for a particular type of owners. e.g INDIVIDUAL', max_length=100)),
                ('abbreviation', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, help_text='A brief summary of the particular type of owner.', null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='RegulatingBody',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='The name of the regulating body', max_length=100, unique=True)),
                ('abbreviation', models.CharField(blank=True, help_text='A short-form of the name of the regulating body e.g NursingCouncil of Kenya could be abbreviated as NCK.', max_length=50, null=True)),
                ('regulation_verb', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'regulating bodies',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='RegulatingBodyContact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='RegulationStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='A short unique name representing a state/stage of regulation e.g. PENDING_OPENING ', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text="A short description of the regulation state or state e.gPENDING_LICENSING could be described as 'waiting for the license tobegin operating' ", null=True)),
                ('is_initial_state', models.BooleanField(default=False, help_text='Indicates whether it is the very first statein the regulation workflow.')),
                ('is_final_state', models.BooleanField(default=False, help_text='Indicates whether it is the last state in the regulation work-flow')),
                ('is_default', models.BooleanField(default=False, help_text='The default regulation status for facilities')),
            ],
            options={
                'verbose_name_plural': 'regulation_statuses',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='RegulatorSync',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='The official name of the facility', max_length=100)),
                ('registration_number', models.CharField(help_text='The registration number given by the regulator', max_length=100)),
                ('county', models.PositiveIntegerField(help_text='The code of the county')),
                ('mfl_code', models.PositiveIntegerField(blank=True, help_text='The assigned MFL code', null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='RegulatoryBodyUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('abbreviation', models.CharField(blank=True, help_text='A short form for the service e.g FANC for Focused Antenatal Care', max_length=50, null=True)),
                ('code', common.fields.SequenceField(blank=True, editable=False, unique=True)),
                ('has_options', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'services',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
            bases=(common.models.base.SequenceMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='What is the name of the category? ', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('abbreviation', models.CharField(blank=True, help_text='A short form of the category e.g ANC for antenatal', max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'service categories',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('abbreviation', models.CharField(blank=True, help_text='A short form for the speciality', max_length=50, null=True)),
                ('code', common.fields.SequenceField(blank=True, editable=False, unique=True)),
            ],
            options={
                'verbose_name_plural': 'specialities',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
            bases=(common.models.base.SequenceMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SpecialityCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Indicates whether the record has been retired?')),
                ('search', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('name', models.CharField(help_text='What is the name of the category? ', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('abbreviation', models.CharField(blank=True, help_text='A short form of the category e.g ANC for antenatal', max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'specialities categories',
                'ordering': ('-updated', '-created'),
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
    ]
